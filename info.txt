This file is part of QEditor.

QEditor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

QEditor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with QEditor.  If not, see <http://www.gnu.org/licenses/>.

/// Basic info
1. download quazip - http://quazip.sourceforge.net/index.html
2. add to 2nd quazip.pro: INCLUDEPATH += "C:\Qt\Qt5.1.0\5.1.0\msvc2010_opengl\include\QtZlib"
3. fix errors from "voidp gzFile" to "gzFile file", and again change
4. compile, copy .lib to C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Lib, headers to C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Include
5. copy .dll to system

/// MapView info
Heightmap:
    Pozn: mapa je zmenšena z 1024.0f na 533.33333f

    Výpočet souřadnice na 1024px z 533.33333px
        příklad: (1024 => 533)
        553 x => 553/1024*533.33333 => 288
        675 z => 675/1024*533.33333 => 352

        288 x => 288/533.33333*1024 => 553
        352 z => 352/533.33333*1024 => 675

    VAROVÁNÍ:
        pixel 1024x1024 je na souřadnici 533.33x0
        pixel 1024x0    je na souřadnici 533.33x533.33
        pixel 0x1024    je na souřadnici 0x0
        pixel 0x0       je na souřadnici 0x533.33

/// Todo list
General:
    1. Save (dodělat save z QListu kde budou soubory) ??? Až v alfě ???

MapChunk:
    1. flatten tool uhel a směr
    2. voda

discuss features:
- player camera (first person[netix], third person camera)
- prechody mezi chunky
- skyboxs (netix)
- water display (wireframe, ..)
- zkouska vetsiho rozliseni pro alphamapy (mozna jen floating point?), pro vertex shading stejne(spis floating point)
- texture scale pro ostatni textury
- novy tool vybrani plochy
 - posunutí
 - zneviditelneni
 - skopirovani
- camera record (myšleno tak, že se naplanuje trasa a kamera po ní pojede)

// tipy od lidí
- při založení projektu maximální výška
- při založení projektu už voda v -X hloubce
- generace terénu
- generování objektů po určené textuře
- automatická textura podle výšky (checkbox)
- import/export heightmapy v určitém formátu (vyhodit ostatní nástroje jako textury atd..)
- 3D stereoskopické

Tessellation shader resources
http://codeflow.org/entries/2010/nov/07/opengl-4-tessellation/
https://github.com/tijutv/GPU-Terrain-Generation

editace terénu
- uniform: nastaví okamžitě výšku térénu na X

texture painting
- smudge: rozmazání
- blur: přechod
- border: na okraji se kreslí nějaká další textura

voda
- přidání
- odebrání
- výška
- upravení
  - RGBA
  - Typ (lava, ocean, reka)

omezení
- přidání
- oderbrání

olistění
- přidání
 - generace olistění
 - 0-20? na čtvereček
 - velikost přidání
- odebrání

/// Done list
- Teren 32bit float point rendering
- Zvyseni/Snizeni terenu
- Archiv na bazi .zip

GLSL:
http://en.wikibooks.org/wiki/GLSL_Programming/Vector_and_Matrix_Operations
x = r = s
y = g = t
z = b = ?
w = a = q

        // vec3 coords = ...;
        // ivec3 count = textureSize(sampler, 0);
        // count.z = layer count;
        // coords.z = layer

Git:
    git ls-files | xargs wc -l // počet řádků zdrojáku v /src

C++ standards:
    1) static_cast<int>(foo) // C++ cast
       (int)foo              // C cast !WRONG!

    2) header.h
       class Class; // instead of include "class.h", include inside of .cpp

    3) (not c++ standard, its memory standard)
        for(qInt8 i = 0; i < ca 200; ++i) // correct, using 8-bit instead of 32-bit, also quaranteed all platforms 8-bit
        for(int i = 0; i < ca 200; ++i)   // wrong, ungaranteed 32-bit on all platforms => we should use qInt32

    4) use switch if its possible
        ex. for QString its not possible, also switch is faster than multiple statements


Lag Troubleshooter:
1) Texture data types
    ex: GL_FLOAT width = 10, height = 10 data != width * height, data = width * height * sizeof(float)

2) Black terrain & laggs
    ex: Give to shader data when map is not yet initialized
    ex2: if you have shader data outside MapChunk and its not necessary, do it in MapChunk like fog init.
    ex3: use shader->bind() everywhere!

2.5) Terrain laggs
    be carefull with glActiveTexture

3) Black terrain
    ex: rly bad using QOpenGLTexture for loading texture :)

4) FBO 1280, 1281, 36054
    Cube map must be width == height!!!